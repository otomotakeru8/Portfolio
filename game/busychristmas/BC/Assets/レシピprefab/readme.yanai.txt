レシピ(resipi)の使い方
・何ができる？
-左上にレシピを表示させることができます！！
-canvasごとコピーして使用するのが丸そう。
-座標を指定して出しているため、大本のobjectをずらして～～
みたいな調整はできません。最悪の場合言ってくれればこちらで調整します。
めちゃくちゃやりたくない。
・どこにある？
asset/amerikca/secne/st2-1の、レシピに入ってます。
最終prefab化しようかと思ったけど、怖いのでやめてます。
やってくれてもいいよ。
・使い方
①コピーして、使いたいシーンに配置する。
②完成品リストの中身を、そのステージで使うアイテムに入れ替える。
L完成品リスト-gameobject-imageという構造になっている。
imageの中身だけを入れ替えればよい。
300×300の画像でぴったりになるように調整しており、基本的にそのサイズで納品
されているため、そのまま導入すれば大丈夫だと思われる。
(imageのTexture TypeをSprite(2D and UI)に変えてください。)
③同様に素材リストの中身も入れ替える
④レシピを選択し、inspectorのResipi(Script)を、そのステージに合わせて調整
(単語解説)
Child4～2：素材を表示する枠です。4枠の物ならchild4、2枠ならchile2が生成されます。
　基本的にはいじらなくてok。
waku:完成品を表示する枠です。これもいじらなくてok
Useitem1～4：その完成品を作るかの判定。例えば、チョコケーキとショートケーキを
　作るステージの場合、item1にチョコケーキ、item2にショートケーキを設定し、
　Useitem3と4のチェックを外してください。そうすると、抽選テーブルから3と4が消えます
　※全てのチェックを外すと無限ループに入ってunityがフリーズします！！止めましょう！！
item(1～4)amount:その完成品を作るのに使う素材の数を入力してください。
　※箱は含めません
　(例)クリームとイチゴを使用→2　歯車→1
item1s(1～4):完成品1で使う素材にチェックを入れてください。item2sなら完成品2
　一回gameobjectを経由してイメージを入れている関係で、非常に素材が見にくく
　なっています。間違えないように気を付けてください(丸投げ)
sitem(1～4)：素材を取得しています。ここ自体には触る必要はないですが、
　ここの中身のイメージを変えて欲しいです(使い方③参照)
MaxAparecer：一度に表示されるレシピの最大数です。いまいち仕様がわかんなかったので
　手軽に変えられるようにしておきました。
Aparerclock：レシピを作成する間隔。想定では2～6秒で作ったので、あんまりにも早いと
　バグるかもしれません。
N秒:ランダム性を持たせるための数です。Aparerclockに+N秒～-N秒の範囲で足し算をします。
　要はレシピの出現間隔にある程度のランダム性を持たせる乱数。float型です。
Oya：レシピの背景が入ってます。今の所灰色のやつ。
　多分まだ素材をもらってないので仮です、いつでも入れ替えられるようにしておいてください。
Box1～6：箱の素材を代入しています。基本的にはいじらなくて大丈夫ですが、
　箱ではない箱(長靴など)を使うステージの場合、使い方②形式で入れ替えてください。
⑤終わり！！
今の所、デバック用としてスペースキーを押すと「完成品1、箱1を制作した」という情報が
入るようになっています。試してみてね。

～～～～～～～～～～
倉庫窓側から送ってほしい(編集してほしい箇所)
-resipi.cs1397～1441行目辺り。
何を思ってそれをかいたか書いていきます。
1397 if (Input.GetKeyDown(KeyCode.Space))←何か情報を受け取ったかの判定に
1404 if (resipp[i, 0] == 1 && resipp[i, 2] == 1)←
　resipp[i,0]i番目の完成品の中身が格納されている。1なら完成品1、2なら完成品2
　resipp[i, 2] == 1 そのアイテムがtrue(存在するか)の判定
　ここの文はそのままで大丈夫です。
　今1になってるところを与えられた情報にしてください。
　1だと完成品1かの判定ができるようになってます。
1408 if (resipp[i, 1] == 1)←箱の色の確認
　resipp[i, 1]にはiの箱の色が格納されています。
　1 紫 2 ピンク 3 赤 4 青 5 黄色 6 緑　です。
　ここも受け取った情報を入れて判定してほしいです。
1412  combo++;
　適当にコンボを加算してます。ここをコンボ加算の変数に変えたらいい感じになると思う。
そもそもの構造解説
　①何か情報を受け取ったかの判定
　　②現在あるレシピを左から検索し、一致するものがあるかの検索
　　　③一致し、かつ箱も一致するかの判定。
　　　　④一致→コンボを加算し、それを消す
　　　　　不一致→それを消す
　　　⑤ループ用に色々処理
現在高速2納品までは想定して作っているんですが、高速3納品(一秒で3回ぐらい納品)
するのは流石に想定してません。一応対応させることはできるけどケッコーめんどくさいです。
ty read me watch!!
よろしくお願いします。矢内。

　　　